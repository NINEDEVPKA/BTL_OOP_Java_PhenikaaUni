/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package QLKS.view;


import QLKS.connect.MyConnection;
import QLKS.controller.HoaDon_PT;
import QLKS.controller.PhuThuDao;
import QLKS.controller.SanPhamDao;
import QLKS.model.HoaDon;
import QLKS.model.PhuThu;
import QLKS.model.SanPham;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pham Thang <Thangyb2706@gmail.com>
 */
public class frPhuThu extends javax.swing.JFrame {
    public String state;
    /**
     * Creates new form frPhuThu
     */
    DateFormat dateFormat = new SimpleDateFormat("yyyy-mm-dd ");
   
    Timestamp timestamp = new Timestamp(System.currentTimeMillis());
    public frPhuThu() throws SQLException {
        
         setExtendedState(MAXIMIZED_BOTH);
        initComponents();
        loadUI();
        LoadJTable();
         state="reset";
        loadbtn(state);
        TextEvent();
        tblPhuThu.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int index = tblPhuThu.getSelectedRow();
                String valueAt =  (String) tblPhuThu.getValueAt(index, 0);
                Optional<PhuThu> pUpdate = ptd.get(valueAt);
                txtPhuThu.setText(pUpdate.get().getMaPT());
                txtKH.setText(pUpdate.get().getMaKH());
                cboSP.getModel().setSelectedItem(spdao.get(pUpdate.get().getMaSP()).get());
                
                cboSoLuong.getModel().setSelectedItem(pUpdate.get().getSoLuong());
                PhuThu findTime=new PhuThu(pUpdate.get().getMaPT(), "", "", 1, 1);
                Optional<PhuThu> resultTime=ptd.get(pUpdate.get().getMaPT());
                Date time=resultTime.get().getNgayBan();
                txtThoiGian.setValue(time);
                
                
            }

            @Override
            public void mousePressed(MouseEvent e) {
//                System.out.println("");
            }

            @Override
            public void mouseReleased(MouseEvent e) {
//                System.out.println("");
            }

            @Override
            public void mouseEntered(MouseEvent e) {
//                System.out.println("Mouse Enter");
            }

            @Override
            public void mouseExited(MouseEvent e) {
//                System.out.println("");
            }
        }
        );
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPhuThu = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtThanhTien = new javax.swing.JTextField();
        txtPhuThu = new javax.swing.JTextField();
        txtKH = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTenKH = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        cboSP = new javax.swing.JComboBox<>();
        btnLuu = new javax.swing.JButton();
        txtThoiGian = new javax.swing.JSpinner();
        cboHD = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        cboSoLuong = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnThoat = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1280, 1280));
        setSize(new java.awt.Dimension(11920, 900));

        tblPhuThu.setAutoCreateRowSorter(true);
        tblPhuThu.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblPhuThu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tblPhuThu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã Phụ Thu", "Mã Khách hàng", "Mã Sản Phẩm", "Số Lượng", "Ngày Bán", "Thành Tiền"
            }
        ));
        tblPhuThu.setPreferredSize(new java.awt.Dimension(450, 500));
        jScrollPane1.setViewportView(tblPhuThu);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Nhập"));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel2.setText("Mã Phụ Thu");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel3.setText("Mã Khách Hàng");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel4.setText("Sản Phẩm");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel5.setText("Số Lượng");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel6.setText("Ngày Bán");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel7.setText("Thành Tiền");

        txtThanhTien.setPreferredSize(new java.awt.Dimension(6, 30));

        txtPhuThu.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtPhuThu.setPreferredSize(new java.awt.Dimension(6, 30));
        txtPhuThu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhuThuActionPerformed(evt);
            }
        });

        txtKH.setPreferredSize(new java.awt.Dimension(6, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel8.setText("Tên Khách Hàng");

        txtTenKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenKHActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(255, 204, 204));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/btnAdd.png"))); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(255, 204, 204));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/btnUpdate.png"))); // NOI18N
        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 204, 204));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/btnDelete.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(255, 204, 204));
        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/btnReload.png"))); // NOI18N
        btnRefresh.setText("Cập nhật");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        cboSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSPActionPerformed(evt);
            }
        });

        btnLuu.setBackground(new java.awt.Color(255, 204, 204));
        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/btnSave.png"))); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        txtThoiGian.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtThoiGian.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.DAY_OF_WEEK));

        jLabel10.setText("Mã hóa đơn");

        cboSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSoLuongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(78, 78, 78)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboSP, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cboSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(63, 63, 63))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(39, 39, 39)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtKH, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                                    .addComponent(txtPhuThu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboHD, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhuThu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cboHD, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8)
                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboSP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cboSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(86, 86, 86))
        );

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Tìm kiếm"));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel9.setText("Tìm Kiếm");

        txtSearch.setPreferredSize(new java.awt.Dimension(69, 30));

        btnSearch.setBackground(new java.awt.Color(153, 204, 255));
        btnSearch.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(btnSearch)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)))
        );

        jPanel3.setBackground(new java.awt.Color(0, 0, 153));

        btnThoat.setBackground(new java.awt.Color(0, 153, 255));
        btnThoat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnThoat.setForeground(new java.awt.Color(255, 255, 255));
        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QLKS/Image/Windows-Close-Program-icon.png"))); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản lý phụ thu");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(564, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(517, 517, 517)
                .addComponent(btnThoat)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 890, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 195, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPhuThuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhuThuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhuThuActionPerformed

    private void txtTenKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenKHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenKHActionPerformed
    PhuThuDao ptd=new PhuThuDao();
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
         state="insert";
        loadbtn(state);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        state="update";
        loadbtn(state);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        switch(state)
        {
            case "insert":
                boolean checkError=false;
                int soLuong=0;
                String maPT= txtPhuThu.getText().trim();
                String maKH= txtKH.getText().trim();
                SanPham sp = (SanPham) cboSP.getSelectedItem();
                HoaDon hd= (HoaDon) cboHD.getSelectedItem();
               
                     soLuong=(int) cboSoLuong.getSelectedItem();
                            
                Date time=(Date) txtThoiGian.getValue();
                Timestamp times=new Timestamp(time.getTime());
                
               
                double thanhTien=Double.parseDouble(txtThanhTien.getText().trim());

                if(maPT.length()==0)
                {        
                    JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập mã phụ thu","Cảnh báo",JOptionPane.WARNING_MESSAGE);
                    
                }
                else{


                    String name="";
                    Optional<PhuThu> checkmaPT = null;
                    PhuThu phuThu= new PhuThu(maPT,maKH,hd.getMaHD(),sp.getMaSP(),soLuong,times,thanhTien);
                    try {
                         name=ptd.findNameKH(phuThu);
                         checkmaPT=ptd.get(maPT);
                         

                    } catch (SQLException ex) {
                        Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                        checkError=true;
                    }
                    if(name==""){
                        JOptionPane.showMessageDialog(rootPane, "Không tồn tại khách hàng này","Cảnh báo",JOptionPane.WARNING_MESSAGE);
                        txtKH.requestFocus();
                    }  
                    if(checkmaPT.get().getMaPT()!=null){
                        JOptionPane.showMessageDialog(rootPane, "Đã tồn tại mã phụ thu này","Cảnh báo",JOptionPane.WARNING_MESSAGE);
                        
                        txtPhuThu.requestFocus();
                    }              
                    else{
                        if(checkError==false)
                        {
                            if(ptd.insert(phuThu)==1) {
                               hdDao.updateThanhTien(phuThu.getThanhTien(), phuThu.getMaHD());
                                try {
                                    hdDao.UpdateKho(phuThu.getMaSP(), -phuThu.getSoLuong());
                                } catch (SQLException ex) {
                                    Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                                }
                        JOptionPane.showMessageDialog(rootPane, "Bạn đã thêm mới thành công","Chúc mừng",JOptionPane.PLAIN_MESSAGE);
                                try {
                                    LoadJTable();
                                } catch (SQLException ex) {
                                    Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                                }
                        state="reset";
                            loadbtn(state);
                    }
                    else {
                       JOptionPane.showMessageDialog(rootPane, "Bạn đã thêm mới thất bại","Chia buồn",JOptionPane.PLAIN_MESSAGE);
                     }
                        }
                    }
                }
                break;
            case "update":
                boolean checkUpdate=false;
                 soLuong=0;
                 maPT= txtPhuThu.getText().trim();
                 maKH= txtKH.getText().trim();
                 sp = (SanPham) cboSP.getSelectedItem();
                 hd= (HoaDon) cboHD.getSelectedItem();
                
                     soLuong=(int) cboSoLuong.getSelectedItem();
                     
                

                 time=(Date) txtThoiGian.getValue();
                 times=new Timestamp(time.getTime());
                thanhTien=Double.parseDouble(txtThanhTien.getText().trim());
                
                if(maPT.length()==0)
                {        
                    JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập mã phụ thu","Cảnh báo",JOptionPane.WARNING_MESSAGE);
                }
                else{


                    String name="";
                    Optional<PhuThu> checkmaPT = null;
                    PhuThu phuThu= new PhuThu(maPT,maKH,hd.getMaHD(),sp.getMaSP(),soLuong,times,thanhTien);
                    try {
                         name=ptd.findNameKH(phuThu);
                         checkmaPT=ptd.get(maPT);


                    } catch (SQLException ex) {
                        Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                        checkUpdate=true;
                    }
                    if(name==""){
                        JOptionPane.showMessageDialog(rootPane, "Không tồn tại khách hàng này","Cảnh báo",JOptionPane.WARNING_MESSAGE);
                        txtKH.requestFocus();
                    }  
                                 
                    
                        if(checkUpdate==false)
                        {
                            if(ptd.update(phuThu)==1) {
                        JOptionPane.showMessageDialog(rootPane, "Bạn đã sửa thành công","Chúc mừng",JOptionPane.PLAIN_MESSAGE);
                                try {
                                    LoadJTable();
                                } catch (SQLException ex) {
                                    Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                                }
                        state="reset";
                           loadbtn(state);
                    }
                    else {
                       JOptionPane.showMessageDialog(rootPane, "Bạn đã sửa thất bại","Chia buồn",JOptionPane.PLAIN_MESSAGE);
                     }
                        }
                    
                }   
                break;
           
                
              
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        state="reset";
        loadbtn(state);
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        state="delete";
        loadbtn(state);
        int confirm=JOptionPane.showConfirmDialog(rootPane, "Bạn có thực sự muốn xóa?","Cảnh báo",JOptionPane.YES_NO_OPTION);
        if(confirm==0)
        {
            String maPT=txtPhuThu.getText().trim();
            
            PhuThu pt= new PhuThu(maPT);
            if(ptd.delete(pt)>0)
            {
                
                JOptionPane.showMessageDialog(rootPane, "Bạn đã xóa thành công");
                try {
                    LoadJTable();
                } catch (SQLException ex) {
                    Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else
                JOptionPane.showMessageDialog(rootPane, "Bạn đã xóa thất bại");
        }
       
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        ((DefaultTableModel)tblPhuThu.getModel()).setNumRows(0); // clear bảng
        String search=txtSearch.getText();
        if(search.equals(""))
        {
            System.out.println("abc");
            try {
                LoadJTable();
            } catch (SQLException ex) {
                Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            
            Object[] dataRow;
            String nameKH="";
        List<PhuThu> listPhuThu = null;
        listPhuThu = phuThuDao.find(new PhuThu(search,search,search,0,0));
        for (PhuThu p : listPhuThu) {
            
                try {
                    nameKH = ptd.findNameKH(new PhuThu("",p.getMaKH(),"",0,0));
                } catch (SQLException ex) {
                    Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                }
            Optional<SanPham> nameSP= spdao.get(p.getMaSP());
            System.out.println(nameKH);
            dataRow = new Object[]{p.getMaPT(), nameKH, nameSP.get().getTenSP(), p.getSoLuong(), p.getNgayBan(), p.getThanhTien()};
            dtmDanhSachPT.addRow(dataRow);
        }

        tblPhuThu.setModel(dtmDanhSachPT);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void cboSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSPActionPerformed
        // TODO add your handling code here:
        cboSoLuong.removeAllItems();
        int soLuong=0;
        Connection conn=  MyConnection.getInstance().getConnection();
        SanPham sp=(SanPham) cboSP.getSelectedItem();
        String querySelect="Select * from kho where masp='"+sp.getMaSP()+"'";            
        try {
            PreparedStatement ps = conn.prepareStatement(querySelect);
            ResultSet rs= ps.executeQuery();
      
            while (rs.next()) {                       
                soLuong= rs.getInt("soluong");                           
            }
            
            for (int i = 1; i <= soLuong; i++) {
            cboSoLuong.addItem(i);           
        }
        } catch (SQLException ex) {
            Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_cboSPActionPerformed
        
    private void cboSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSoLuongActionPerformed
        // TODO add your handling code here: 
        SanPham sp=(SanPham) cboSP.getSelectedItem();
        
        if(cboSoLuong.getSelectedItem()!=null){
            int SL=(int) cboSoLuong.getSelectedItem();                 
            txtThanhTien.setText(""+sp.getGiaSP()*SL);
        }
                  
    }//GEN-LAST:event_cboSoLuongActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed

        this.dispose();
      //  login.h.setVisible(true);
    }//GEN-LAST:event_btnThoatActionPerformed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frPhuThu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frPhuThu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frPhuThu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frPhuThu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new frPhuThu().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<HoaDon> cboHD;
    private javax.swing.JComboBox<SanPham> cboSP;
    private javax.swing.JComboBox<Integer> cboSoLuong;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPhuThu;
    private javax.swing.JTextField txtKH;
    private javax.swing.JTextField txtPhuThu;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtThanhTien;
    private javax.swing.JSpinner txtThoiGian;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel dtmDanhSachPT;
    PhuThuDao phuThuDao= new PhuThuDao();
    SanPhamDao spdao= new SanPhamDao();
    HoaDon_PT hdDao= new HoaDon_PT();
    private void LoadJTable() throws SQLException {
        dtmDanhSachPT = new DefaultTableModel();
        String[] columnTitle = {"Mã Phụ Thu", "Mã Khách Hàng","Mã hóa đơn", "Mã Sản Phẩm", "Số Lượng", "Ngày Bán", "Thành Tiền"};
        dtmDanhSachPT.setColumnIdentifiers(columnTitle);
        Object[] dataRow;
        List<PhuThu> listPhuThu = phuThuDao.getAll();
        for (PhuThu p : listPhuThu) {
            String nameKH=ptd.findNameKH(new PhuThu("",p.getMaKH(),"",0,0));
            Optional<SanPham> nameSP= spdao.get(p.getMaSP());
            
            dataRow = new Object[]{p.getMaPT(), nameKH,p.getMaHD(),nameSP.get().getTenSP(), p.getSoLuong(), p.getNgayBan(), p.getThanhTien()};
            dtmDanhSachPT.addRow(dataRow);
        }

        tblPhuThu.setModel(dtmDanhSachPT);
        tblPhuThu.getColumnModel().getColumn(0).setMaxWidth(100);
        tblPhuThu.getColumnModel().getColumn(1).setPreferredWidth(15);
        tblPhuThu.getColumnModel().getColumn(2).setPreferredWidth(50);
        tblPhuThu.getColumnModel().getColumn(2).setPreferredWidth(50);
        tblPhuThu.getColumnModel().getColumn(3).setPreferredWidth(10);
        tblPhuThu.getColumnModel().getColumn(4).setPreferredWidth(5);
        tblPhuThu.getColumnModel().getColumn(5).setPreferredWidth(100);
    }
    
    private void loadUI() {
        
        for (SanPham sp : spdao.getAll()) {            
            cboSP.addItem(sp);
        }
        for (HoaDon hd : hdDao.getAll()) {
            cboHD.addItem(hd);
        }
    }
    
    
    private void loadbtn(String state) {
        
        switch(state)
        {
            case "reset":
                txtKH.setText("");
                txtPhuThu.setText("");
                
                txtTenKH.setText("");
                txtThanhTien.setText("");
                txtThoiGian.setEnabled(false);
                cboHD.setEnabled(false);
                txtPhuThu.setEnabled(false);
                txtKH.setEnabled(false);
                
                cboSoLuong.setEnabled(false);
                txtTenKH.setEnabled(false);
                txtThanhTien.setEnabled(false);
                cboSP.setEnabled(false);
                
                
                btnLuu.setEnabled(false);
                btnAdd.setEnabled(true);
                btnDelete.setEnabled(true);
                btnUpdate.setEnabled(true);
                break;
            case "insert":
                txtThoiGian.setEnabled(true);
                txtPhuThu.setEnabled(true);
                txtKH.setEnabled(true);
                cboHD.setEnabled(true);
                cboSoLuong.setEnabled(true);
                txtTenKH.setEnabled(true);
                txtThanhTien.setEnabled(true);
                cboSP.setEnabled(true);
                btnLuu.setEnabled(true);
                btnDelete.setEnabled(false);
                btnAdd.setEnabled(false);
                btnUpdate.setEnabled(false);
                txtTenKH.setEnabled(false);
      
                break;
            case "update":
                txtThoiGian.setEnabled(true);
                txtTenKH.setEnabled(false);
                txtPhuThu.setEnabled(false);
                txtKH.setEnabled(true);
                cboHD.setEnabled(true);
                cboSoLuong.setEnabled(true);
                txtTenKH.setEnabled(false);
                txtThanhTien.setEnabled(true);
                cboSP.setEnabled(true);
                btnLuu.setEnabled(true);
                btnDelete.setEnabled(false);
                btnAdd.setEnabled(false);
                btnUpdate.setEnabled(false);
                break;
            case "delete":
                System.out.println("Bạn đã chọn nút delete");
                break;
        }
    }
    public void TextEvent()
    {
        txtKH.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                try {
                    change();
                } catch (SQLException ex) {
                    Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                try {
                    change();
                } catch (SQLException ex) {
                    Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                try {
                    change();
                } catch (SQLException ex) {
                    Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            public void change() throws SQLException
            {
                cboHD.removeAllItems();
                String name=ptd.findNameKH(new PhuThu("",txtKH.getText(),"",1,1));               
                txtTenKH.setText(name);
                List<HoaDon> hdList= ptd.findMaHD_byMaKH(txtKH.getText());
                for (HoaDon hoaDon : hdList) {
                    cboHD.addItem(hoaDon);
                }
            }
        });
       
    }
    
}
