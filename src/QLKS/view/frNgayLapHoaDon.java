/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package QLKS.view;

import QLKS.connect.MyConnection;
import QLKS.controller.HoaDon_PT;
import QLKS.controller.PhuThuDao;
import QLKS.controller.SanPhamDao;
import QLKS.model.HoaDon;
import QLKS.model.PhuThu;
import QLKS.model.SanPham;
import QLKS.model.Phong;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.ButtonGroup;

/**
 *
 * @author Pham Thang <Thangyb2706@gmail.com>
 */
public class frNgayLapHoaDon extends javax.swing.JFrame {

    /**
     * Creates new form frNgayLapHoaDon
     */
    public String state;
    DateFormat dateFormat = new SimpleDateFormat("yyyy-mm-dd ");
   
    Timestamp timestamp = new Timestamp(System.currentTimeMillis());
    public frNgayLapHoaDon() throws SQLException {
        initComponents();
        state="reset";
        loadbtn(state);
        loadUI();
        ButtonGroup grThanhToan= new ButtonGroup();
        grThanhToan.add(rdoDaThanhToan);
        grThanhToan.add(rdoChuaThanhToan);
        LoadJTable();
        TextEvent();
        tblHoaDon.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int index = tblHoaDon.getSelectedRow();
                String valueAt =  (String) tblHoaDon.getValueAt(index, 0);
                Optional<HoaDon> pUpdate = hdDao.get(valueAt);
                txtMaHD.setText(pUpdate.get().getMaHD());
                txtMaKH.setText(pUpdate.get().getMaKH());
                
                Optional<HoaDon> resultTime=hdDao.get(pUpdate.get().getMaHD());
                Date time=resultTime.get().getNgayLapHD();
                txtThoiGian.setValue(time);
                
                if(pUpdate.get().getTrangThai()==0)
                {
                    rdoChuaThanhToan.setSelected(true);
                }
                else if(pUpdate.get().getTrangThai()==1){
                    rdoDaThanhToan.setSelected(true);
                }
                
                
               
                txtThanhTien.setText(pUpdate.get().getThanhTien()+"");
            }

            @Override
            public void mousePressed(MouseEvent e) {
                System.out.println("");
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                System.out.println("");
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                System.out.println("");
            }

            @Override
            public void mouseExited(MouseEvent e) {
                System.out.println("");
            }
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField6 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txtMaHD = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtThanhTien = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTenKH = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtThoiGian = new javax.swing.JSpinner();
        btnLuu = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        rdoChuaThanhToan = new javax.swing.JRadioButton();
        rdoDaThanhToan = new javax.swing.JRadioButton();
        cboMaPhong = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        jTextField6.setText("jTextField1");

        jLabel7.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        tblHoaDon.setAutoCreateRowSorter(true);
        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblHoaDon);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Lập hóa đơn"));

        jLabel2.setText("Mã hóa đơn");

        jLabel3.setText("Mã khách hàng");

        jLabel4.setText("Ngày lập hóa đơn");

        txtThanhTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtThanhTienActionPerformed(evt);
            }
        });

        jLabel5.setText("Thành tiền");

        jLabel6.setText("Trạng Thái");

        jLabel8.setText("Tên khách hàng");

        txtThoiGian.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtThoiGian.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.DAY_OF_WEEK));

        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnRefresh.setText("Cập nhật");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Thanh toán"));

        rdoChuaThanhToan.setText("Chưa thanh toán");

        rdoDaThanhToan.setText("Đã thanh toán");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdoChuaThanhToan)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(rdoDaThanhToan)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoChuaThanhToan)
                    .addComponent(rdoDaThanhToan))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jLabel9.setText("Mã phòng");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3))
                                        .addGap(68, 68, 68)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtMaKH)
                                            .addComponent(txtThoiGian, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(38, 38, 38)
                                        .addComponent(txtTenKH, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cboMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(104, 104, 104)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(69, 69, 69)
                                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(56, 56, 56)
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 173, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel9)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(cboMaPhong)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm kiếm"));

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTimKiem)
                .addGap(579, 579, 579))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        jPanel4.setBackground(new java.awt.Color(0, 0, 153));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setText("Lập hóa đơn");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(645, 645, 645)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtThanhTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtThanhTienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtThanhTienActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        switch(state)
        {
            case "insert":
            boolean checkError=false;
            
            String maHD= txtMaHD.getText().trim();
            String maKH= txtMaKH.getText().trim();
            int thanhToan=1;
            if(rdoChuaThanhToan.isSelected())
            {
                thanhToan=0;
            }
        
            Date time=(Date) txtThoiGian.getValue();
            Timestamp times=new Timestamp(time.getTime());
            double thanhTien=0;
            if(maHD.length()==0)
            {
                JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập mã phụ thu","Cảnh báo",JOptionPane.WARNING_MESSAGE);

            }
            else{

                String name="";
                Optional<HoaDon> checkMaHD = null;
                HoaDon hoaDon= new HoaDon(maHD,maKH,times,thanhTien,thanhToan);
                try {
                    name=hdDao.findNameKH(hoaDon.getMaKH());
                    checkMaHD=hdDao.get(maHD);

                } catch (SQLException ex) {
                    Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                    checkError=true;
                }
                if(name==""){
                    JOptionPane.showMessageDialog(rootPane, "Không tồn tại khách hàng này","Cảnh báo",JOptionPane.WARNING_MESSAGE);
                    txtMaKH.requestFocus();
                }
                if(checkMaHD.toString()!=null){
                    JOptionPane.showMessageDialog(rootPane, "Đã tồn tại mã hóa đơn này","Cảnh báo",JOptionPane.WARNING_MESSAGE);
                    txtMaHD.requestFocus();
                }
                else{
                    if(checkError==false)
                    {
                        if(hdDao.insert(hoaDon)==1) {
                            
                            JOptionPane.showMessageDialog(rootPane, "Bạn đã thêm mới thành công","Chúc mừng",JOptionPane.PLAIN_MESSAGE);
                            try {
                                LoadJTable();
                            } catch (SQLException ex) {
                                Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            state="reset";
                            loadbtn(state);
                        }
                        else {
                            JOptionPane.showMessageDialog(rootPane, "Bạn đã thêm mới thất bại","Chia buồn",JOptionPane.PLAIN_MESSAGE);
                        }
                    }
                }
            }
            break;
            case "update":
            boolean checkUpdate=false;
            maHD= txtMaHD.getText().trim();
            maKH= txtMaKH.getText().trim();
            thanhToan=1;
            if(rdoChuaThanhToan.isSelected())
            {
                thanhToan=0;
            }
        
            time=(Date) txtThoiGian.getValue();
            times=new Timestamp(time.getTime());
            thanhTien=0;
            if(maHD.length()==0)
            {
                JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập mã phụ thu","Cảnh báo",JOptionPane.WARNING_MESSAGE);

            }
            else{

                String name="";
                Optional<HoaDon> checkMaHD = null;
                HoaDon hoaDon= new HoaDon(maHD,maKH,times,thanhTien,thanhToan);
                try {
                    name=hdDao.findNameKH(hoaDon.getMaKH());
                    

                } catch (SQLException ex) {
                    Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                    checkError=true;
                }
                if(name==""){
                    JOptionPane.showMessageDialog(rootPane, "Không tồn tại khách hàng này","Cảnh báo",JOptionPane.WARNING_MESSAGE);
                    txtMaKH.requestFocus();
                }
                

                if(checkUpdate==false)
                {
                    if(hdDao.update(hoaDon)==1) {
                        JOptionPane.showMessageDialog(rootPane, "Bạn đã sửa thành công","Chúc mừng",JOptionPane.PLAIN_MESSAGE);
                        try {
                            LoadJTable();
                        } catch (SQLException ex) {
                            Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        state="reset";
                        loadbtn(state);
                    }
                    else {
                        JOptionPane.showMessageDialog(rootPane, "Bạn đã sửa thất bại","Chia buồn",JOptionPane.PLAIN_MESSAGE);
                    }
                }

            }
            break;

        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        state="insert";
        loadbtn(state);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        state="update";
        loadbtn(state);
         
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        state="delete";
        loadbtn(state);
        int confirm=JOptionPane.showConfirmDialog(rootPane, "Bạn có thực sự muốn xóa?","Cảnh báo",JOptionPane.YES_NO_OPTION);
        if(confirm==0)
        {
            String maHD=txtMaHD.getText().trim();
            HoaDon hd= new HoaDon(maHD);
            if(hdDao.delete(hd)>0)
            {
                JOptionPane.showMessageDialog(rootPane, "Bạn đã xóa thành công");
                try {
                    LoadJTable();
                } catch (SQLException ex) {
                    Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else
            JOptionPane.showMessageDialog(rootPane, "Bạn đã xóa thất bại");
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        state="reset";
        loadbtn(state);
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        ((DefaultTableModel)tblHoaDon.getModel()).setNumRows(0); // clear bảng
        String search=txtTimKiem.getText();
        if(search.equals(""))
        {
            System.out.println("abc");
            try {
                LoadJTable();
            } catch (SQLException ex) {
                Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            
            Object[] dataRow;
            String nameKH="";
            String trangThai="";
        List<HoaDon> listHoaDon = null;
        listHoaDon = hdDao.find(new HoaDon(search,search,0,0));
        for (HoaDon hd : listHoaDon) {
            
                try {
                    nameKH = hdDao.findNameKH(hd.getMaKH());
                } catch (SQLException ex) {
                    Logger.getLogger(frNgayLapHoaDon.class.getName()).log(Level.SEVERE, null, ex);
                }
            if(hd.getTrangThai()==1)
            {
                trangThai="Đã thanh toán";
            }
            else
                trangThai="Chưa thanh toán";
            dataRow = new Object[]{hd.getMaHD(), nameKH, hd.getNgayLapHD(), hd.getThanhTien(), trangThai};
            dtmDanhSachHD.addRow(dataRow);
        }

        tblHoaDon.setModel(dtmDanhSachHD);
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frNgayLapHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frNgayLapHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frNgayLapHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frNgayLapHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new frNgayLapHoaDon().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(frNgayLapHoaDon.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<Phong> cboMaPhong;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JRadioButton rdoChuaThanhToan;
    private javax.swing.JRadioButton rdoDaThanhToan;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTextField txtMaHD;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtThanhTien;
    private javax.swing.JSpinner txtThoiGian;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void loadbtn(String state) {
        switch(state)
        {
            case "reset":
                txtMaHD.setText("");
                txtMaKH.setText("");              
                txtTenKH.setText("");               
                txtThanhTien.setText("");
                cboMaPhong.setEnabled(false);
                txtThoiGian.setEnabled(false);
                rdoChuaThanhToan.setEnabled(false);
                rdoDaThanhToan.setEnabled(false);
                txtMaHD.setEnabled(false);
                txtMaKH.setEnabled(false);
                txtTenKH.setEnabled(false);
                txtThanhTien.setEnabled(false);
                
                
                btnLuu.setEnabled(false);
                btnAdd.setEnabled(true);
                btnDelete.setEnabled(true);
                btnUpdate.setEnabled(true);
                break;
            case "insert":
                
                txtThoiGian.setEnabled(true);
                rdoChuaThanhToan.setEnabled(true);
                rdoDaThanhToan.setEnabled(true);
                txtMaHD.setEnabled(true);
                txtMaKH.setEnabled(true);
                txtTenKH.setEnabled(false);
                txtThanhTien.setEnabled(false);
                cboMaPhong.setEnabled(true);
               
                
                btnLuu.setEnabled(true);
                btnDelete.setEnabled(false);
                btnAdd.setEnabled(false);
                btnUpdate.setEnabled(false);
                txtTenKH.setEnabled(false);
      
                break;
            case "update":
                txtThoiGian.setEnabled(true);
                rdoChuaThanhToan.setEnabled(true);
                rdoDaThanhToan.setEnabled(true);
                txtMaHD.setEnabled(false);
                txtMaKH.setEnabled(true);
                txtTenKH.setEnabled(false);
                txtThanhTien.setEnabled(false);
                cboMaPhong.setEnabled(true);
                
                btnLuu.setEnabled(true);
                btnDelete.setEnabled(false);
                btnAdd.setEnabled(false);
                btnUpdate.setEnabled(false);
                break;
            case "delete":
                System.out.println("Bạn đã chọn nút delete");
                break;
        }
    }
    HoaDon_PT hdDao=new HoaDon_PT();
    
    DefaultTableModel dtmDanhSachHD;
    private void LoadJTable() throws SQLException {
        dtmDanhSachHD = new DefaultTableModel();
        String[] columnTitle = {"Mã hóa đơn", "Tên khách hàng", "Ngày lập hóa đơn","Thành Tiền","Trạng Thái"};
        dtmDanhSachHD.setColumnIdentifiers(columnTitle);
        Object[] dataRow;
        String trangThai="";
        List<HoaDon> listHD = hdDao.getAll();
        for (HoaDon hd : listHD) {
            String nameKH=hdDao.findNameKH(hd.getMaKH());   
            if(hd.getTrangThai()==1)
            {
                trangThai="Đã thanh toán";
            }
            else
                trangThai="Chưa thanh toán";
            dataRow = new Object[]{hd.getMaHD(), nameKH, hd.getNgayLapHD(), hd.getThanhTien(), trangThai};
            dtmDanhSachHD.addRow(dataRow);
        }

        tblHoaDon.setModel(dtmDanhSachHD);
        tblHoaDon.getColumnModel().getColumn(0).setMaxWidth(100);
        tblHoaDon.getColumnModel().getColumn(1).setPreferredWidth(15);
        tblHoaDon.getColumnModel().getColumn(2).setPreferredWidth(50);
        tblHoaDon.getColumnModel().getColumn(3).setPreferredWidth(10);
        tblHoaDon.getColumnModel().getColumn(4).setPreferredWidth(5);
//        tblHoaDon.getColumnModel().getColumn(5).setPreferredWidth(100);
    }

    private void TextEvent() {
        txtMaKH.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                try {
                    change();
                } catch (SQLException ex) {
                    Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                try {
                    change();
                } catch (SQLException ex) {
                    Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                try {
                    change();
                } catch (SQLException ex) {
                    Logger.getLogger(frPhuThu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            public void change() throws SQLException
            {
                String name=hdDao.findNameKH(txtMaKH.getText());
                
                txtTenKH.setText(name);
            }
        });
    }

    private void loadUI() {
        List<Phong> list = new ArrayList<>();
        try {
            Connection conn = MyConnection.getInstance().getConnection();
            String sql_select = "SELECT p.MaPhong FROM phong p INNER JOIN loaiphong l ON p.LoaiPhong = l.LoaiPhong ";
            PreparedStatement ps = conn.prepareStatement(sql_select);
            ResultSet rs = ps.executeQuery(sql_select);
            while (rs.next()) {
                String MaPhong = rs.getString("maphong");
                
                list.add(new Phong(MaPhong, "", "", 1, ""));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        for (Phong ph : list) {
            cboMaPhong.addItem(ph);
        }
    }
}
